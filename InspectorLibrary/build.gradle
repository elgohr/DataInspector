group 'com.github.elgohr'
version '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    // Package with dependencies
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.6.1'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-web:4.3.3.RELEASE"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.13"
    compile "javax.persistence:persistence-api:1.0"
    compile "org.reflections:reflections:0.9.10"

    testCompile "org.codehaus.groovy:groovy-all:2.4.1"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-2"
    testCompile "org.spockframework:spock-spring:1.1-groovy-2.4-rc-2"
    testCompile "org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE"
    testCompile "org.springframework.boot:spring-boot-starter-test:1.4.0.RELEASE"
    testCompile "cglib:cglib-nodep:3.2.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            pom.project {
                name 'DataInspector'
                description 'Publishes the metadata of your application data to a Spring Boot endpoint'
                url 'https://github.com/elgohr/DataInspector/'
                packaging 'jar'
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'https://github.com/elgohr/DataInspector'
                    connection 'scm:git:https://github.com/elgohr/DataInspector.git'
                    developerConnection 'scm:git@github.com:elgohr/DataInspector.git'
                }
                developers {
                    developer {
                        id 'elgohr'
                        name 'Lars Gohr'
                    }
                }
            }
        }
    }
}